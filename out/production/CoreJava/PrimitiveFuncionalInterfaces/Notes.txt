**  Primitive Predicate Prototypes:

    1.  interface IntPredicate {
            public boolean test(int i);
            //default methods: and(),or(),negate()
        }

    2.  interface LongPredicate {
            public boolean test(long l);
            //default methods: and(),or(),negate()
        }

    3.  interface DoublePredicate {
            public boolean test(double d);
            //default methods: and(),or(),negate()
        }

**  Primitive Function Types:

1.  IntFunction: can take int type as input and return any type
    public R apply(int i);
2.  LongFunction: can take long type as input and return any type
    public R apply(long i);
3.  DoubleFunction: can take double type as input and return any type
    public R apply(double d);

4.  ToIntFunction: It can take any type as input but always returns int type
    public int applyAsInt(T t)
5.  ToLongFunction: It can take any type as input but always returns long type
    public long applyAsLong(T t)
6.  ToDoubleFunction: It can take any type as input but always returns double type
    public int applyAsDouble(T t)

7.  IntToLongFunction: It can take int type as input and returns long type
    public long applyAsLong(int i)
8.  IntToDoubleFunction: It can take int type as input and returns long type
    public double applyAsDouble(int i)

9.  LongToIntFunction: It can take long type as input and returns int type
    public int applyAsInt(long i)
10. LongToDoubleFunction: It can take long type as input and returns double type
    public int applyAsDouble(long i)

11. DoubleToIntFunction: It can take double type as input and returns int type
    public int applyAsInt(double i)
12. DoubleToLongFunction: It can take double type as input and returns long type
    public int applyAsLong(double i)

13. ToIntBiFunction:return type must be int type but inputs can be anytype
    public int applyAsInt(T t, U u)
14. ToLongBiFunction:return type must be long type but inputs can be anytype
    public long applyAsLong(T t, U u)
15. ToDoubleBiFunction: return type must be double type but inputs can be anytype
    public double applyAsDouble(T t, U u)

**  Primitive Consumer Types:

1.  IntConsumer
    public void accept(int value)
2.  LongConsumer
    public void accept(long value)
3.  DoubleConsumer
    public void accept(double value)
4.  ObjIntConsumer<T>
    public void accept(T t,int value)
5.  ObjLongConsumer<T>
    public void accept(T t,long value)
6.  ObjDoubleConsumer<T>
    public void accept(T t,double value)

**  Primitive Supplier Types:

1.  IntSupplier
    public int getAsInt();
2.  LongSupplier
    public long getAsLong()
3.  DoubleSupplier
    public double getAsDouble()
4.  BooleanSupplier
    public boolean getAsBoolean()